<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   version="1.1"
   width="1024"
   height="1024"
   viewBox="28 553 1024 1024"
   id="svg49"
   sodipodi:docname="Pig_dark.svg"
   inkscape:version="1.2 (dc2aedaf03, 2022-05-15)"
   inkscape:export-filename="Pig_mix.svg"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs53" />
  <sodipodi:namedview
     id="namedview51"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     showgrid="false"
     inkscape:zoom="0.67386625"
     inkscape:cx="561.68416"
     inkscape:cy="536.4566"
     inkscape:window-width="1848"
     inkscape:window-height="1025"
     inkscape:window-x="72"
     inkscape:window-y="31"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg49" />
  <path
     style="fill:#ff0077;fill-opacity:1;stroke:#ffffff;stroke-width:96;stroke-linecap:butt;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:1"
     d="m 170.10572,553.52139 c -24.44884,0.22777 -59.07095,4.55468 -62.70947,5.39284 -3.0676,0.70664 -35.266781,15.76824 -37.289278,17.69333 -2.182096,2.077 -25.329688,22.77023 -26.846905,26.06149 -1.208994,2.62264 -8.960465,31.23059 -9.502037,34.11132 -0.579788,3.08399 -3.689977,24.23361 -4.953403,44.42008 0.5914,275.44649 0.727571,808.30205 0.77961,848.77975 44.370731,0.3459 981.204163,1.015 1019.204063,0.922 0,-40.396 3.0797,-715.10152 3.0797,-849.91637 0,0 -6.0468,-29.39337 -6.7004,-34.16054 -0.6536,-4.76717 -8.0356,-33.94915 -10.0949,-37.64299 -2.0592,-3.69383 -23.1736,-30.89554 -25.8107,-33.3486 -2.6372,-2.45305 -34.31213,-13.80328 -36.82648,-15.6695 -2.28154,-1.69341 -48.30938,-7.09139 -48.30938,-7.09139 -81.36336,0.0484 -710.80609,0.44858 -754.02042,0.44858 z"
     id="path3147"
     sodipodi:nodetypes="csssscccczzzscc" />
  <g
     id="layer1"
     inkscape:highlight-color="#aaaaaa"
     transform="translate(-11.65079)"
     style="fill:#000000;fill-opacity:1">
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g4">
      <path
         d="m 23.517239,1400.3728 c 11.42505,-5.5086 24.144927,-13.072 35.253818,-15.3253 h 1.3e-5 c 2.258757,-0.4191 4.4308,-0.5949 6.52958,-0.5949 v 0 c 6.28463,0 11.8618,1.5922 16.51971,2.911 h 3e-5 c 3.84603,1.089 6.86599,1.9245 9.48033,1.9245 v 0 c 0.78554,0 1.50089,-0.078 2.161705,-0.2383 l -0.09288,0.024 0.0013,-3e-4 0.09215,-0.024 c 2.310885,-0.5621 4.54081,-2.2863 7.009915,-5.1791 v 0 c 1.97531,-2.3143 3.93203,-5.1651 6.11772,-8.3549 h 2e-5 c 2.47095,-3.6061 5.19485,-7.5853 8.3995,-11.3399 h -1e-5 c 9.2777,-10.8702 22.8352,-20.1202 35.3905,-20.1202 v 0 c 0.14015,0 0.25784,10e-4 0.39608,0 h 9.2e-4 c 12.77545,0.2004 23.48782,10.0406 28.87068,18.556 v 0 c 2.37285,3.7538 3.77112,7.3343 5.24608,11.0935 h 2e-5 c 1.94418,4.9554 4.1103,10.4733 8.95286,17.9601 v 0 c 8.62122,13.3286 25.66608,32.8355 42.91694,52.5683 l -6.8e-4,-8e-4 0.005,0.01 -1.30837,-0.7671 c 38.03238,8.0498 75.66678,16.0021 101.7824,16.0021 v 0 c 6.61619,0 12.40152,-0.5129 17.20981,-1.6292 h 3e-5 c 5.61905,-1.3046 10.022,-3.4535 15.75285,-6.2632 v 0 c 18.6218,-9.1301 48.1354,-23.4838 165.56085,-30.8672 v 0 c 50.3175,-3.1639 116.8239,-5.0502 187.66083,-5.0502 v 0 c 145.89753,0 262.96955,-3.7841 342.76936,17.6728 0.051,36.6507 0.8861,104.0018 0.694,145.9164 -134.83494,0.6838 -840.83133,1.1565 -1042.620885,1.0824 C 23.945701,1469.63 23.54061,1461.1624 23.517239,1400.3728 Z"
         id="path646"
         sodipodi:nodetypes="ccsssssssccccssssssssssssssssccccsssssssssscccc"
         style="fill:#000000;fill-opacity:1" />
    </g>
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g6" />
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g10">
      <path
         d="m 255.17445,1368.7268 c -0.14824,0.111 -0.31053,0.2018 -0.48262,0.2702 v 0 l -33.76349,13.4082 c -0.25976,0.1031 -0.5375,0.1533 -0.81695,0.1475 v 0 c -1.73647,-0.036 -3.39977,-0.07 -5.06859,-0.07 v 0 c -3.1598,0 -6.04762,0.1283 -8.50198,0.5906 h -3e-5 c -5.34417,1.0063 -8.24919,3.318 -6.94687,10.2338 v 0 c 2.45947,13.0605 19.79645,40.3308 45.49995,53.8875 v 0 c 14.90381,7.8607 32.69638,11.135 50.76337,11.135 v 0 c 12.88864,0 25.8624,-1.6663 37.94246,-4.4881 v 0 c 28.9963,-6.7733 52.75383,-20.1874 68.9416,-33.7351 v 0 c 16.1474,-13.5139 24.79553,-27.1875 31.41165,-38.8255 l -3e-5,2e-4 c 2.27898,-4.0088 4.31278,-7.7688 6.27604,-11.3986 v 0 c 3.74462,-6.9232 7.24904,-13.4049 11.68347,-20.1504 h -3e-5 c 6.67254,-10.1501 15.62613,-21.154 19.36303,-24.0716 h 7e-5 c 0.4306,-0.3362 0.89343,-0.649 1.37316,-0.8603 l 5.8e-4,-2e-4 c 0.32986,-0.1452 0.77994,-0.2925 1.29874,-0.2925 v 0 c 0.0932,0 0.18702,0 0.27808,0.014 l -0.002,-2e-4 c 1.75487,0.1806 2.24603,1.7371 2.35855,2.3794 l 2e-5,2e-4 c 0.12156,0.6941 0.0736,1.4871 0.003,2.1755 v 2e-4 c -0.0899,0.8715 -0.25784,1.9095 -0.43,2.9788 v 0 c -0.22357,1.3887 -0.46579,2.8955 -0.62674,4.4568 v 0 c -0.28927,2.8056 -0.31997,5.8236 -0.35098,9.0412 v 10e-5 c -0.0355,3.681 -0.071,7.6035 -0.54802,11.4508 v 0 c -0.88966,7.1747 -3.29738,13.9636 -5.24858,19.2482 v 0 c -1.95692,5.2999 -3.53448,9.2887 -5.1091,13.27 h -8.2e-4 l -0.007,0.017 v 0 l -0.007,0.017 c -0.0946,0.2392 -0.23383,0.4605 -0.40997,0.6508 v 0 c -2.14664,2.3197 -4.31571,4.5935 -7.54291,13.3355 v 0 c -3.53632,9.5792 -7.0213,23.5405 -2.55692,28.3205 v 0 c 1.54004,1.6489 4.4307,2.5033 8.59417,2.5033 v 0 c 6.4175,0 14.49025,-2.0161 21.15623,-3.9195 l -0.0633,0.019 h 0.005 l 0.0632,-0.019 c 10.78618,-3.0804 17.08755,-5.6199 23.43072,-8.1765 l -1.15549,1.1479 0.002,-0.01 0.008,-0.02 c 5.2228,-12.3512 10.52495,-24.8976 14.28216,-31.6814 v 0 c 0.92999,-1.6791 1.76564,-3.0069 2.49614,-4.168 v 0 c 2.1563,-3.4275 3.5628,-5.603 4.7968,-13.1252 v 0 c 1.68093,-10.2466 2.9548,-29.997 3.3298,-43.378 v 0 c 0.0207,-0.7382 0.0398,-1.5059 0.0572,-2.2065 v -10e-5 c 0.24469,-9.8253 0.0942,-18.7755 10.46405,-18.7755 v 0 c 1.0164,0 2.1233,0.088 3.3093,0.2539 v 0 c 9.33834,1.3098 25.96444,7.8846 42.86917,14.8276 h 3e-5 c 2.36935,0.9731 4.987,2.0541 7.3627,3.0353 v 0 c 2.54785,1.0521 4.77026,1.9702 7.28546,3.0032 v 0 c 21.66119,8.8964 41.17834,16.4627 70.14974,20.967 v 0 c 13.4396,2.0895 28.9004,3.5181 44.97306,3.5181 v 0 c 18.64069,0 38.04194,-1.9218 56.02624,-6.9349 v 0 c 33.52155,-9.3438 62.3381,-29.4729 91.5018,-49.8688 0.67643,-0.4732 1.5676,-0.5052 2.27635,-0.082 v 0 c 7.97149,4.7606 17.30075,10.1767 19.49215,16.9357 v 0 c 1.5061,4.6456 -0.39584,9.4727 -3.03415,14.8657 v 0 c -0.69985,1.4305 -1.48765,2.9656 -2.31355,4.5749 v 0 c -0.9643,1.8789 -1.9947,3.8869 -3.0634,6.0714 v 0 c -5.57684,11.3995 -12.20306,27.6223 -18.87164,43.951 -0.0802,0.1963 -0.1897,0.3794 -0.32476,0.5429 v 0 c -15.1102,18.2848 -27.50227,33.89 -25.21547,38.5566 v 0 c 0.59852,1.2213 3.25062,2.1323 9.22267,2.1323 v 0 c 3.0565,0 6.5399,-0.2191 10.19274,-0.45 v 0 c 3.82156,-0.2416 7.8291,-0.4956 11.58282,-0.4956 v 0 c 1.53084,0 3.02277,0.042 4.46674,0.1452 h 6e-5 c 4.38458,0.3145 8.10304,1.1907 11.23834,1.9268 h -6e-5 c 2.98511,0.7007 5.27556,1.2267 7.31816,1.2267 v 0 c 2.62966,0 4.95485,-0.867 7.5645,-4.3974 v -10e-5 c 0.6119,-0.8279 1.2414,-1.8068 1.8915,-2.932 l -5e-5,10e-5 c 2.81409,-4.871 5.75452,-12.0126 9.15415,-20.2827 v 10e-5 c 4.33737,-10.5512 9.35946,-22.7767 15.62796,-33.627 v 0 c 3.9411,-6.8218 8.36394,-13.0806 12.46228,-18.882 v 0 c 8.8645,-12.5482 15.78991,-22.5302 15.19396,-32.3422 v 0 c -0.19933,-3.2812 -1.2563,-6.6526 -2.8919,-10.0549 v 0 c -3.12805,-6.5069 -8.1962,-12.7889 -12.7353,-18.4005 v 0 c -3.3329,-4.1204 -6.5227,-8.0416 -8.0592,-11.2378 v 0 c -1.9378,-4.0309 -1.3546,-7.1227 1.07294,-10.5791 v 10e-5 c 1.35046,-1.9228 3.32923,-4.0604 5.70752,-6.6372 v 0 c 4.42534,-4.7948 10.65464,-11.5441 18.35574,-22.5088 v 0 c 18.8852,-26.8888 46.4056,-78.8194 48.89543,-130.645 v 0 c 2.4862,-51.7506 -19.97493,-103.4906 -63.15183,-133.582 v 0 C 905.0837,950.4468 861.7443,939.8909 812.45,939.8909 v 0 c -17.5248,0 -35.7876,1.3347 -54.52904,3.9483 v 0 c -71.4538,9.9647 -149.75826,38.50284 -214.79066,79.0507 v 0 c -57.96477,36.1412 -105.42904,81.8475 -141.32195,117.2856 v 0 c -2.26805,2.2393 -4.38431,4.333 -6.56245,6.4881 h -2e-5 c -1.92416,1.9037 -4.19948,4.1546 -6.04062,5.9724 v 0 c -36.93783,36.4697 -59.36978,57.2091 -75.44776,64.9254 v 0 c -5.80288,2.785 -10.86517,3.9269 -15.45943,3.9269 v 0 c -8.32563,0 -14.74177,-3.7744 -20.63477,-7.1993 l 2.7313,-3.0694 c 5.4609,7.29 11.37978,15.1317 13.004,20.7327 v 0 c 1.07747,3.7157 0.43346,7.5265 -4.1757,8.8631 v 0 c -1.43338,0.4157 -3.16775,0.5537 -4.9752,0.5537 v 0 c -4.11782,0 -9.41066,-0.7299 -14.27385,-1.3968 v 0 c -4.57138,-0.6268 -8.72835,-1.192 -11.60062,-1.192 v 0 c -1.68121,0 -2.40996,0.2082 -2.58205,0.3137 l 1e-4,-10e-5 c 0.006,0 0.18771,-0.1245 0.2848,-0.4129 l 2e-5,-10e-5 c 0.06,-0.1782 0.0426,-0.2947 0.0431,-0.2913 v -10e-5 c 0.22447,1.5459 4.87127,6.0619 12.09807,11.9129 v 0 c 3.3698,2.7282 7.03886,5.5612 10.45927,8.2018 h 3e-5 c 2.97837,2.2993 5.79487,4.4735 8.07,6.3155 l -2e-5,-10e-5 c 9.75049,7.8941 10.63654,10.5979 7.91632,16.2804 h 3e-5 c -0.0957,0.1999 -0.1773,0.3681 -0.27591,0.5719 v 0 c -0.0897,0.1851 -0.20919,0.4325 -0.30114,0.6245 v 0 c -2.42108,5.0576 -6.07993,14.0289 -9.70648,26.663 v 0 c -0.9895,3.4472 -1.9685,7.1359 -2.9831,10.9582 v 0 c -2.6912,10.1388 -5.59045,21.0866 -9.12747,28.8474 v 0 c -4.96106,10.8855 -11.17297,15.529 -17.09438,19.9618 z"
         id="path650"
         style="fill:#000000;fill-opacity:1" />
      <path
         d="m 252.66173,1365.3704 v 0 c 5.78801,-4.333 11.28471,-8.4546 15.79185,-18.3442 v 0 c 3.35746,-7.3668 6.16582,-17.9204 8.89022,-28.1843 v 0 c 1.01164,-3.8111 2.00282,-7.5461 3.0055,-11.0393 v 0 c 3.68445,-12.8356 7.42295,-22.0276 9.95472,-27.3165 v 0 c 0.10431,-0.2179 0.21258,-0.4415 0.30908,-0.6409 v 0 c 0.101,-0.2086 0.1759,-0.3633 0.2679,-0.5555 h 4e-5 c 1.33231,-2.7832 2.75958,-3.4938 -6.77276,-11.2113 l -3e-5,-2e-4 c -2.22129,-1.7984 -5.01085,-3.9523 -7.99385,-6.2552 h 4e-5 c -3.41412,-2.6356 -7.12021,-5.4968 -10.53546,-8.2618 v 0 c -6.35416,-5.1445 -13.0824,-10.9416 -13.60907,-14.5691 v -10e-5 c -0.0725,-0.4992 -0.0625,-1.0695 0.13255,-1.649 l 6e-5,-10e-5 c 0.29004,-0.8612 0.88491,-1.4481 1.49765,-1.8237 l 1e-4,-2e-4 c 1.28376,-0.7867 3.12281,-0.9316 4.77296,-0.9316 v 0 c 3.22629,0 7.72227,0.621 12.1702,1.2308 v 0 c 4.96527,0.6808 9.93467,1.3581 13.70427,1.3581 v 0 c 1.65937,0 2.9341,-0.1344 3.80735,-0.3877 v 0 c 1.47577,-0.428 2.04917,-1.1425 1.31662,-3.6686 v 0 c -1.35464,-4.6714 -6.61499,-11.7537 -12.33279,-19.3867 -0.59753,-0.7978 -0.55084,-1.9059 0.11172,-2.6505 0.66257,-0.7447 1.75785,-0.9197 2.61957,-0.4188 v 0 c 6.00559,3.4903 11.48911,6.6314 18.5279,6.6314 v 0 c 3.86499,0 8.30973,-0.9534 13.64529,-3.514 v 0 c 15.2904,-7.3384 37.14752,-27.4314 74.3161,-64.1291 v 0 c 1.77268,-1.7502 4.17974,-4.1311 6.03757,-5.9692 h -3e-5 c 2.16607,-2.1431 4.3076,-4.2618 6.56555,-6.4912 v 0 c 35.9032,-35.4482 83.65325,-81.4497 142.04935,-117.8598 v 0 c 65.513,-40.84754 144.37265,-69.5966 216.42996,-79.6455 v 0 c 18.91534,-2.6379 37.37214,-3.98854 55.10814,-3.98854 v 0 c 49.8236,0 94.09944,10.65961 126.89467,33.51574 v 0 c 44.48503,31.0031 67.49033,84.1899 64.94243,137.223 v 0 c -2.5443,52.9592 -30.5574,105.6666 -49.6523,132.8537 v 0 c -7.8617,11.1935 -14.24265,18.1068 -18.7058,22.9427 v 0 c -2.4541,2.659 -4.20555,4.5629 -5.3574,6.2031 v 10e-5 c -1.6995,2.4198 -1.90345,3.9017 -0.7253,6.3526 v 0 c 1.2722,2.6463 4.062,6.1174 7.5403,10.4174 v 0 c 4.4732,5.5302 9.8763,12.1941 13.2542,19.2208 v 0 c 1.7867,3.7167 3.05586,7.6281 3.29816,11.6175 v 0 c 0.70521,11.6109 -7.42996,22.9486 -15.95446,35.0155 v 0 c -4.11335,5.8226 -8.4254,11.9291 -12.25635,18.5602 v 0 c -6.10385,10.5653 -11.02425,22.5263 -15.38049,33.1236 v 10e-5 c -3.35492,8.1612 -6.41386,15.6143 -9.40162,20.7859 l -4e-5,2e-4 c -0.7055,1.221 -1.42116,2.3405 -2.1502,3.3267 v -10e-5 c -3.3146,4.4843 -6.839,6.098 -10.9362,6.098 v 0 c -2.6272,0 -5.4285,-0.6693 -8.2763,-1.3377 h -5e-5 c -3.14648,-0.7387 -6.56725,-1.5386 -10.58002,-1.8265 h 7e-5 c -1.32135,-0.095 -2.7097,-0.1345 -4.16694,-0.1345 v 0 c -3.60009,0 -7.46586,0.2438 -11.31829,0.4873 v 0 c -3.61682,0.2287 -7.24347,0.4584 -10.45727,0.4584 v 0 c -5.127,0 -11.03205,-0.4894 -12.9877,-4.4802 v 0 c -3.85246,-7.8616 12.3066,-26.8066 25.74843,-43.0725 l -0.32476,0.5428 c 6.64783,-16.2779 13.33323,-32.6516 18.98699,-44.2084 v 0 c 1.094,-2.2362 2.13147,-4.257 3.09944,-6.1431 v 0 c 0.8273,-1.6122 1.6016,-3.1216 2.2775,-4.5031 v 0 c 2.72524,-5.5707 3.7282,-8.9039 2.81197,-11.7302 v 0 c -1.58032,-4.8745 -8.93817,-9.4241 -17.6535,-14.6288 l 2.27636,-0.082 c -29.05377,20.3191 -58.45063,40.9029 -92.77887,50.4717 v 0 c -18.44676,5.1419 -38.24621,7.0888 -57.1521,7.0888 v 0 c -16.31226,0 -31.99126,-1.4493 -45.61726,-3.5678 v 0 c -29.4664,-4.5812 -49.34966,-12.2992 -71.09844,-21.2317 v 0 c -2.54303,-1.0444 -4.72226,-1.9447 -7.29303,-3.0064 v 0 c -2.32287,-0.9593 -5.04373,-2.0826 -7.35523,-3.0321 h 1e-4 c -17.1372,-7.0384 -33.17416,-13.3358 -41.8587,-14.5539 v 0 c -1.03745,-0.1455 -1.9443,-0.2132 -2.7269,-0.2132 v 0 c -5.53345,0 -5.9828,3.0548 -6.2725,14.6872 v -2e-4 c -0.0169,0.6769 -0.0374,1.4967 -0.0576,2.2198 v 0 c -0.3761,13.4212 -1.65506,33.404 -3.38336,43.9392 v 0 c -1.34467,8.1968 -3.0057,10.8965 -5.38544,14.6792 v 0 c -0.73089,1.1617 -1.50842,2.3982 -2.37726,3.9668 v 0 c -3.62164,6.539 -8.8168,18.8167 -14.08825,31.2829 l 0.008,-0.02 -0.002,0.01 c -0.21469,0.5227 -0.63135,0.9367 -1.15547,1.148 v 0 c -6.38615,2.574 -12.85173,5.1792 -23.84676,8.3193 l 0.0632,-0.019 h -0.005 l -0.0633,0.019 c -6.63636,1.895 -15.23114,4.0807 -22.30748,4.0807 v 0 c -4.4506,0 -8.87944,-0.8589 -11.65838,-3.8344 v 0 c -6.62164,-7.0898 -1.43344,-24.1797 1.68778,-32.6345 v 0 c 3.43045,-9.2925 5.90335,-12.0342 8.39893,-14.7309 l -0.40998,0.6507 0.007,-0.017 v 0 l 0.007,-0.017 h -8.2e-4 c 1.5738,-3.9791 3.13592,-7.9295 5.07473,-13.1804 v 0 c 1.95133,-5.2849 4.19705,-11.6675 5.02091,-18.3117 v 0 c 0.44268,-3.5702 0.48046,-7.2527 0.51636,-10.9754 v 1e-4 c 0.0306,-3.1747 0.06,-6.3956 0.3729,-9.4308 v 0 c 0.17504,-1.6979 0.43642,-3.3178 0.65792,-4.6934 v 0 c 0.1788,-1.1104 0.32376,-2.0151 0.3988,-2.7425 v 10e-5 c 0.0666,-0.646 0.0523,-0.9419 0.0381,-1.0225 l 3e-5,3e-4 c -0.0263,-0.15 0.14966,0.9452 1.34207,1.0679 l -0.002,-3e-4 c 0.0534,0.01 0.10126,0.01 0.15424,0.01 v 0 c 0.26465,0 0.41174,-0.072 0.39029,-0.063 l 5.8e-4,-2e-4 c -0.0278,0.012 -0.17758,0.089 -0.48322,0.328 h 7e-5 c -3.1424,2.4534 -11.77314,12.9288 -18.4397,23.0699 h -3e-5 c -4.32022,6.5718 -7.74469,12.9005 -11.49909,19.8418 v 0 c -1.96325,3.6298 -4.01294,7.4196 -6.31894,11.476 l -4e-5,10e-5 c -6.72588,11.8311 -15.66777,25.9939 -32.36562,39.9685 v 0 c -16.65784,13.9412 -41.0032,27.6708 -70.67883,34.6028 v 0 c -12.36017,2.8872 -25.65741,4.598 -38.89621,4.598 v 0 c -18.52954,0 -37.04471,-3.3522 -52.71939,-11.6194 v 0 c -26.70455,-14.0848 -44.94231,-42.3654 -47.66432,-56.8202 v 0 c -1.83255,-9.7313 3.25201,-13.8044 10.29132,-15.13 h -3e-5 c 2.84843,-0.5365 6.05349,-0.663 9.27798,-0.663 v 0 c 1.71167,0 3.43433,0.036 5.15501,0.071 l -0.81695,0.1476 33.76349,-13.4082 -0.48262,0.2702"
         id="path8"
         style="fill:#000000;fill-opacity:1" />
    </g>
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g14">
      <path
         d="m 934.901,983.96405 -0.3759,-0.52675 11.5226,2.8531 -0.617,0.4843 -0.0557,-18.8925 0.004,-0.0614 c 0.59656,-4.91687 1.1918,-9.82294 1.7716,-14.159 v 0 c 0.5791,-4.3306 1.15095,-8.1927 4.245,-12.2455 v 0 c 3.0634,-4.0127 8.5878,-8.19956 13.40827,-10.268 v 0 c 2.237,-0.9599 4.34839,-1.4755 6.26873,-1.4755 v 0 c 2.2438,0 4.2192,0.70617 5.78943,2.21105 v 0 c 2.85887,2.73985 4.29761,8.06342 4.10487,11.36705 v 0 c -0.1954,3.34883 -2.0791,4.7965 -5.0057,4.7965 v 0 c -0.1185,0 -0.24657,-0.003 -0.3685,-0.007 h 5e-5 c -3.00465,-0.1157 -7.0951,-1.61655 -10.15445,-4.13596 v 0 c -3.07987,-2.53638 -5.0956,-6.08724 -6.76096,-10.66294 v 0 c -1.66467,-4.57394 -3.01604,-10.2735 -2.3811,-16.15695 v 0 c 0.6344,-5.87835 3.2514,-11.92785 7.55986,-16.23615 v 0 c 4.2993,-4.2991 10.2619,-6.8335 16.1054,-9.3237 l 0.025,-0.01 0.002,-7.5e-4 0.27301,0.9541 c -7.29317,1.5437 -14.44617,3.0656 -19.51013,6.531 v 0 c -5.0249,3.4387 -8.02914,8.8304 -9.10309,15.729 v 0 c -1.07755,6.92166 -0.20679,15.3309 1.17295,20.8899 v 0 c 1.36965,5.51815 3.22836,8.1789 5.4088,10.62044 v 0 c 2.1855,2.44726 4.6628,4.63736 9.41776,6.06016 v 0 c 2.20834,0.66085 4.89697,1.15285 7.53634,1.15285 v 0 c 3.09446,0 6.04844,-0.67535 8.1082,-2.46365 v 0 c 3.8447,-3.3382 4.81927,-10.7929 2.34734,-16.8033 v 0 c -2.32629,-5.65626 -7.6853,-9.9274 -15.30859,-9.9274 v 0 c -0.38269,0 -0.78605,0.0113 -1.18065,0.0335 v 0 c -8.3101,0.4675 -19.1219,5.8788 -25.2373,16.5868 v 0 c -6.1354,10.743 -7.5712,26.83034 -9.0118,43.08675 z"
         id="path654"
         style="fill:#000000;fill-opacity:1" />
      <path
         d="m 933.91003,983.8763 v 0 c 1.43337,-16.17433 2.8714,-32.5182 9.13887,-43.4924 v 0 c 6.28716,-11.00884 17.4078,-16.60076 26.0453,-17.08666 v 0 c 0.41483,-0.0234 0.8331,-0.0351 1.23655,-0.0351 v 0 c 8.04529,0 13.7561,4.53192 16.22865,10.54382 v 0 c 2.57,6.24893 1.6637,14.21777 -2.6152,17.93293 v 0 c -2.31786,2.01244 -5.55333,2.7073 -8.7604,2.7073 v 0 c -2.754,0 -5.53976,-0.51175 -7.8215,-1.19455 v 0 c -4.98046,-1.49035 -7.6061,-3.81025 -9.8747,-6.35059 v 0 c -2.2745,-2.54696 -4.219,-5.34956 -5.63225,-11.04352 v 0 c -1.40295,-5.65244 -2.29335,-14.1983 -1.19045,-21.28259 v 0 c 1.1064,-7.10681 4.22505,-12.77065 9.52425,-16.39695 v 0 c 5.26045,-3.5998 12.63285,-5.1523 19.86595,-6.68325 0.2505,-0.053 0.5003,0.0927 0.5774,0.33692 0.0771,0.2442 -0.0438,0.50693 -0.27935,0.60733 l -0.0251,0.01 -0.002,7.5e-4 0.025,-0.01 c -5.8852,2.50799 -11.65354,4.97374 -15.79194,9.11194 v 0 c -4.1305,4.1303 -6.6614,9.96075 -7.2742,15.63934 v 0 c -0.6124,5.67386 0.68924,11.21036 2.3269,15.71002 v 0 c 1.6371,4.49824 3.57426,7.86004 6.4585,10.23524 v 0 c 2.90555,2.3928 6.79105,3.8031 9.5603,3.9098 h 4e-5 c 0.10936,0.004 0.22461,0.006 0.33006,0.006 v 0 c 2.4354,0 3.84987,-1.07172 4.0125,-3.85962 v 0 c 0.1806,-3.09493 -1.2047,-8.10353 -3.8,-10.59083 v 0 c -1.3624,-1.30565 -3.0807,-1.93444 -5.1011,-1.93444 v 0 c -1.74707,0 -3.72247,0.47071 -5.8764,1.39494 v 0 c -4.676,2.00643 -10.05835,6.09145 -13.0098,9.9575 v 0 c -2.92056,3.8255 -3.47146,7.4492 -4.0497,11.77354 v 0 c -0.57905,4.33016 -1.1731,9.2273 -1.77,14.14706 l 0.004,-0.0614 0.0557,18.8925 c 4e-4,0.15325 -0.0698,0.29815 -0.1903,0.39275 -0.12055,0.0946 -0.27796,0.12835 -0.4267,0.0915 v 0 l -11.52265,-2.8531 c -0.23805,-0.0589 -0.39758,-0.28246 -0.37592,-0.5267 v 0"
         id="path12"
         style="fill:#000000;fill-opacity:1" />
    </g>
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g18" />
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g22" />
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g26" />
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g30" />
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g34" />
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g38" />
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g42">
      <path
         d="m 833.6471,1421.9692 -0.0493,0.042 c -0.15264,0.9194 -0.0977,1.6892 0.19549,2.2876 0.61477,1.2544 3.30573,2.1603 9.26747,2.1603 3.06133,0 6.5405,-0.2192 10.1959,-0.4502 h -5e-5 0.0295 0.0295 10e-5 c 3.79905,-0.2401 7.79294,-0.4918 11.52066,-0.4918 1.53364,0 3.01694,0.041 4.46314,0.1461 l 3.7e-4,-4e-4 h 0.009 c 4.3656,0.314 8.066,1.1841 11.1953,1.9197 h -10e-5 l 0.0262,0.01 h 0.004 c 2.9831,0.7002 5.27525,1.2271 7.3254,1.2271 2.63955,0 4.9728,-0.8706 7.5816,-4.3858 h -0.009 l -0.0102,0.01 -0.003,-0.095 c -20.22675,-0.9803 -40.95305,-1.7665 -61.75375,-2.3662 h -0.008 l 0.0159,0.016 -0.0176,-0.018 z"
         id="path40"
         style="fill:#000000;fill-opacity:1" />
    </g>
    <g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g46">
      <path
         d="m 487.14948,1429.406 -0.003,10e-5 c -11.63575,1.1761 -22.03898,2.4334 -31.36011,3.746 l 0.004,0.057 h -0.004 c 1.63827,0.7865 3.89967,1.1884 6.75637,1.1884 6.40153,0 14.4491,-2.005 21.10224,-3.902 l 3.4e-4,-10e-5 0.003,-10e-4 h 1.2e-4 l 0.0632,-0.019 -5e-4,2e-4 0.0245,-0.01 h 4e-5 c 1.20937,-0.3456 2.32167,-0.6721 3.42708,-1.0044 l 0.0208,-0.028 v 0 l -0.0292,-0.029 z"
         id="path44"
         style="fill:#000000;fill-opacity:1" />
    </g>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
