<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   version="1.1"
   width="512"
   height="512"
   viewBox="28 553 512 512"
   id="svg49"
   sodipodi:docname="crapicon.svg"
   inkscape:version="1.2 (dc2aedaf03, 2022-05-15)"
   inkscape:export-filename="Pig_mix.svg"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xml:space="preserve"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><defs
     id="defs53" /><sodipodi:namedview
     id="namedview51"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     showgrid="false"
     inkscape:zoom="1.3431581"
     inkscape:cx="304.87847"
     inkscape:cy="234.89416"
     inkscape:window-width="1848"
     inkscape:window-height="1025"
     inkscape:window-x="72"
     inkscape:window-y="31"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg49" /><path
     style="display:inline;fill:#ff0077;fill-opacity:1;stroke:#ffffff;stroke-width:64;stroke-linecap:butt;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:1"
     d="m 99.199645,562.21225 c -12.22442,0.1138 -29.53546,2.27734 -31.35472,2.69642 -1.5338,0.35332 -17.6334,7.88412 -18.64464,8.84666 -1.09106,1.0385 -12.66486,11.38512 -13.42346,13.03074 -0.6045,1.31132 -4.48024,15.6153 -4.75102,17.05566 -0.2899,1.542 -1.84498,12.1168 -2.4767,22.21004 0.2957,137.72334 0.36378,404.15093 0.3898,424.38993 22.18538,0.172 490.602065,0.5074 509.602025,0.461 0,-20.198 1.53984,-357.55081 1.53984,-424.95823 0,0 -3.0234,-14.6967 -3.3502,-17.08028 -0.3268,-2.38358 -4.0178,-16.97458 -5.04744,-18.8215 -1.0296,-1.8469 -11.5868,-15.44776 -12.90536,-16.6743 -1.3186,-1.22652 -17.15606,-6.90164 -18.41324,-7.83474 -1.14076,-0.8467 -24.15468,-3.5457 -24.15468,-3.5457 -40.68168,0.0242 -355.40304,0.2243 -377.010205,0.2243 z"
     id="path3147"
     sodipodi:nodetypes="csssscccczzzscc" /><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><g
     id="layer1-5"
     transform="matrix(0.46202062,0,0,0.49831803,9.2572701,282.80289)"
     style="display:inline;fill:#000000;fill-opacity:1"><g
       style="display:inline;fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g4-3"><path
         d="m 23.517239,1400.3728 c 11.42505,-5.5086 24.144927,-13.072 35.253818,-15.3253 h 1.3e-5 c 2.258757,-0.4191 4.4308,-0.5949 6.52958,-0.5949 v 0 c 6.28463,0 11.8618,1.5922 16.51971,2.911 h 3e-5 c 3.84603,1.089 6.86599,1.9245 9.48033,1.9245 v 0 c 0.78554,0 1.50089,-0.078 2.161705,-0.2383 l -0.09288,0.024 0.0013,-3e-4 0.09215,-0.024 c 2.310885,-0.5621 4.54081,-2.2863 7.009915,-5.1791 v 0 c 1.97531,-2.3143 3.93203,-5.1651 6.11772,-8.3549 h 2e-5 c 2.47095,-3.6061 5.19485,-7.5853 8.3995,-11.3399 h -1e-5 c 9.2777,-10.8702 22.8352,-20.1202 35.3905,-20.1202 v 0 c 0.14015,0 0.25784,10e-4 0.39608,0 h 9.2e-4 c 12.77545,0.2004 23.48782,10.0406 28.87068,18.556 v 0 c 2.37285,3.7538 3.77112,7.3343 5.24608,11.0935 h 2e-5 c 1.94418,4.9554 4.1103,10.4733 8.95286,17.9601 v 0 c 8.62122,13.3286 25.66608,32.8355 42.91694,52.5683 l -6.8e-4,-8e-4 0.005,0.01 -1.30837,-0.7671 c 38.03238,8.0498 75.66678,16.0021 101.7824,16.0021 v 0 c 6.61619,0 12.40152,-0.5129 17.20981,-1.6292 h 3e-5 c 5.61905,-1.3046 10.022,-3.4535 15.75285,-6.2632 v 0 c 18.6218,-9.1301 48.1354,-23.4838 165.56085,-30.8672 v 0 c 50.3175,-3.1639 116.8239,-5.0502 187.66083,-5.0502 v 0 c 145.89753,0 347.78726,-2.9648 427.58696,18.4921 0.051,36.6507 2.2764,97.8669 2.0843,139.7815 -134.8349,0.6838 -927.03923,6.4721 -1128.828785,6.398 C 23.945701,1469.63 23.54061,1461.1624 23.517239,1400.3728 Z"
         id="path646-5"
         sodipodi:nodetypes="ccsssssssccccssssssssssssssssccccsssssssssscccc"
         style="fill:#000000;fill-opacity:1" /></g><g
       style="fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g6-6" /><g
       style="display:inline;fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g10-2"><path
         id="path8-9"
         d="m 809.0957,931.71484 c -36.20616,0.38369 -72.21522,6.00129 -107.25952,14.91979 -40.74378,10.40756 -80.32252,25.30717 -117.94076,44.08477 -17.86197,8.93083 -35.24206,18.823 -52.05601,29.5972 -24.02843,15.1302 -47.59007,31.2037 -68.90005,50.0337 -18.75893,16.491 -35.6947,35.0426 -50.50186,55.1555 -7.54185,9.8942 -14.64975,20.1089 -21.73607,30.3311 -4.04439,5.8419 -7.94508,11.7854 -11.54345,17.9134 -5.22939,8.6176 -10.55203,17.2237 -16.69468,25.1848 -0.48575,0.6279 -1.0397,1.3076 -1.62232,1.99 -3.98529,4.5226 -9.02813,7.9459 -14.09293,11.1433 -1.30206,0.7426 -2.51851,1.7285 -4.05707,1.9169 -3.1015,0.7605 -6.24811,1.3287 -9.41559,1.7315 -0.39241,0.048 -1.19302,0.1357 -1.74168,0.1988 -0.80153,0.071 -1.9537,0.1886 -2.89439,0.2463 -1.4992,0.1093 -2.84592,0.1609 -4.3151,0.2092 -1.64459,0.047 -3.50716,0.046 -5.23626,0.058 -1.25077,0.01 -2.50202,0 -3.75202,-0.051 -0.48462,-0.021 -1.32369,-0.077 -1.9375,-0.168 -4.80841,-0.6518 -9.54203,-1.7562 -14.26172,-2.8652 -5.60912,-2.0901 -11.6611,-2.993 -16.95472,-5.8998 -1.70905,-1.1604 -3.98821,-1.421 -5.87685,-0.5491 -2.68391,1.0728 -4.27005,4.232 -3.50242,7.0231 0.50322,2.0626 2.15188,3.5207 3.28861,5.2352 2.94528,4.0389 5.99446,8.0425 8.34225,12.4699 0.24888,0.498 0.4782,1.0056 0.6875,1.5215 -3.83479,0.1102 -7.64727,-0.476 -11.44463,-0.9351 -5.40193,-0.6976 -10.80758,-1.6715 -16.27187,-1.5986 -3.03839,0.03 -6.33849,1.0016 -8.15683,3.6008 -1.88824,2.6308 -1.62006,6.3473 0.14677,8.97 2.30683,3.7878 5.73241,6.6999 9.01714,9.6093 7.47119,6.4301 15.53354,12.2415 23.16645,18.3985 2.08102,1.743 4.29052,3.394 6.00413,5.5184 0.0649,0.3547 -0.37095,0.7709 -0.45684,1.1628 -6.15244,12.789 -10.12889,26.4719 -13.70639,40.1633 -2.25308,8.3436 -4.37447,16.7552 -7.53292,24.8143 -2.10071,5.3173 -5.07667,10.3914 -9.35185,14.2537 -1.82448,1.6795 -3.76498,3.2509 -5.80492,4.6537 -10.56408,4.1954 -21.12815,8.3908 -31.69222,12.5862 -6.14841,-0.076 -12.51104,-0.2875 -18.36595,1.9012 -3.96146,1.5168 -7.44208,4.6358 -8.74431,8.7505 -1.28888,3.727 -0.84679,7.7578 -0.0938,11.5457 1.28449,8.3633 2.153,16.8965 5.1886,24.8606 2.83065,7.6275 7.67516,14.5677 14.19118,19.4909 4.8135,3.7218 10.40354,6.2759 16.11519,8.286 13.49388,5.0852 26.896,10.605 40.97702,13.8929 10.48297,2.5122 21.28931,3.8209 32.07525,3.3781 30.51795,-0.9098 60.72817,-9.8363 86.94954,-25.4505 14.23064,-8.516 27.35708,-19.0782 37.91655,-31.92 7.78106,-9.2859 13.95931,-19.7643 19.71232,-30.3875 5.45396,-9.9785 10.69385,-20.1284 17.3681,-29.3691 1.57558,-2.2398 3.21724,-4.4328 4.8959,-6.596 -0.056,3.165 -0.0409,6.3289 -0.20466,9.4308 -0.24537,6.9684 -2.34658,13.6896 -4.73344,20.1845 -1.60983,4.4138 -3.31018,8.7938 -5.03456,13.164 -4.62704,4.9977 -7.14781,11.4716 -9.34129,17.8115 -2.40148,7.0389 -4.31931,14.3886 -4.2173,21.8779 0.10036,4.5441 1.30368,9.3506 4.62929,12.6332 3.48956,3.4477 8.55487,4.6516 13.32578,4.7145 7.71145,0.1283 15.26659,-1.7621 22.66074,-3.7478 8.53661,-2.346 16.91253,-5.2555 25.11166,-8.5885 1.94701,-0.6568 3.68336,-2.1011 4.31967,-4.1027 4.20767,-9.8197 8.22495,-19.7382 13.07095,-29.2672 0.66215,-1.2397 1.27958,-2.2817 2.01716,-3.4966 1.77422,-2.9135 3.69912,-5.7837 4.76041,-9.056 1.90898,-5.5007 2.50303,-11.3362 3.16885,-17.0879 1.38488,-13.1541 2.07987,-26.3733 2.42767,-39.5928 0.10823,-2.5623 0.10694,-5.2498 0.57422,-7.8183 0.12249,-0.4758 0.21368,-1.0134 0.46094,-1.42 2.17125,-0.3281 4.36924,0.2165 6.48878,0.663 1.09428,0.2466 2.10174,0.5156 3.10898,0.7982 8.4489,2.4217 16.63457,5.6618 24.8001,8.8913 13.28239,5.3027 26.5039,11.0264 39.89808,16.1857 11.56665,4.453 23.36922,8.3335 35.4383,11.1832 18.16104,4.3247 36.76269,6.6989 55.40515,7.5055 20.12867,0.8342 40.42321,-0.2943 60.15816,-4.4879 13.87765,-2.9645 27.3294,-7.7568 40.12102,-13.8769 21.49546,-10.215 41.16679,-23.7476 60.63049,-37.3314 0.64597,0.1977 1.30719,0.7649 1.955,1.1152 1.25525,0.7787 2.71264,1.7263 3.78629,2.4748 2.31514,1.6887 4.77764,3.3645 6.38745,5.7867 1.1003,1.634 0.40502,3.6755 -0.20319,5.3563 -1.95112,4.8143 -4.52873,9.34 -6.80659,14.0009 -4.23339,8.5799 -7.96334,17.3973 -11.67344,26.213 -2.55448,6.1116 -5.04976,12.2468 -7.56685,18.374 -7.18139,8.7641 -14.61562,17.3826 -20.72746,26.9506 -2.57744,4.1087 -5.01297,8.4898 -5.79988,13.3365 -0.48174,3.2423 0.36223,6.8112 2.83684,9.0815 2.96892,2.8804 7.26028,3.6879 11.24398,3.913 7.11671,0.3828 14.21338,-0.5301 21.31982,-0.7621 4.76979,-0.2038 9.58814,-0.06 14.25952,1.0039 5.05139,1.0611 10.16667,2.7945 15.39103,2.0006 4.51952,-0.6923 8.45741,-3.5605 11.10041,-7.2116 3.33414,-4.4302 5.55098,-9.5595 7.79331,-14.5947 3.57478,-8.2354 6.876,-16.7012 10.45548,-24.8622 2.31387,-5.2308 4.79729,-10.5106 7.50977,-15.4688 5.5146,-10.281 12.70447,-19.5062 19.21749,-29.1477 4.52797,-6.7577 8.90957,-13.8996 10.59049,-21.9647 1.47216,-6.5381 0.29874,-13.4539 -2.50043,-19.4781 -3.83989,-8.6338 -10.01034,-15.9041 -15.86293,-23.2177 -2.02337,-2.5478 -4.14448,-5.0746 -5.63632,-7.9818 -0.26972,-0.4575 -0.29487,-1.0017 0.0792,-1.4074 1.68233,-2.6137 3.99004,-4.7421 6.01806,-7.0792 4.90524,-5.2941 9.62334,-10.7675 13.9499,-16.5481 9.0951,-12.0442 16.93629,-24.9952 23.98141,-38.3296 10.84615,-20.6072 19.61692,-42.3788 25.21199,-65.0079 4.6617,-18.8785 6.9017,-38.4554 5.4787,-57.8886 -2.0794,-29.8348 -12.11205,-59.1892 -29.37909,-83.6632 -12.6609,-18.0063 -29.27326,-33.23867 -48.40463,-44.14311 -21.91822,-12.57988 -46.51806,-19.89716 -71.40782,-23.68889 -16.45802,-2.51406 -33.12866,-3.48662 -49.7696,-3.34266 z"
         style="fill:#000000;fill-opacity:1" /></g><g
       style="display:inline;fill:#000000;fill-opacity:1;stroke-linejoin:miter"
       id="g14-1"><path
         d="m 934.901,983.96405 -0.3759,-0.52675 11.5226,2.8531 -0.617,0.4843 -0.0557,-18.8925 0.004,-0.0614 c 0.59656,-4.91687 1.1918,-9.82294 1.7716,-14.159 v 0 c 0.5791,-4.3306 1.15095,-8.1927 4.245,-12.2455 v 0 c 3.0634,-4.0127 8.5878,-8.19956 13.40827,-10.268 v 0 c 2.237,-0.9599 4.34839,-1.4755 6.26873,-1.4755 v 0 c 2.2438,0 4.2192,0.70617 5.78943,2.21105 v 0 c 2.85887,2.73985 4.29761,8.06342 4.10487,11.36705 v 0 c -0.1954,3.34883 -2.0791,4.7965 -5.0057,4.7965 v 0 c -0.1185,0 -0.24657,-0.003 -0.3685,-0.007 h 5e-5 c -3.00465,-0.1157 -7.0951,-1.61655 -10.15445,-4.13596 v 0 c -3.07987,-2.53638 -5.0956,-6.08724 -6.76096,-10.66294 v 0 c -1.66467,-4.57394 -3.01604,-10.2735 -2.3811,-16.15695 v 0 c 0.6344,-5.87835 3.2514,-11.92785 7.55986,-16.23615 v 0 c 4.2993,-4.2991 10.2619,-6.8335 16.1054,-9.3237 l 0.025,-0.01 0.002,-7.5e-4 0.27301,0.9541 c -7.29317,1.5437 -14.44617,3.0656 -19.51013,6.531 v 0 c -5.0249,3.4387 -8.02914,8.8304 -9.10309,15.729 v 0 c -1.07755,6.92166 -0.20679,15.3309 1.17295,20.8899 v 0 c 1.36965,5.51815 3.22836,8.1789 5.4088,10.62044 v 0 c 2.1855,2.44726 4.6628,4.63736 9.41776,6.06016 v 0 c 2.20834,0.66085 4.89697,1.15285 7.53634,1.15285 v 0 c 3.09446,0 6.04844,-0.67535 8.1082,-2.46365 v 0 c 3.8447,-3.3382 4.81927,-10.7929 2.34734,-16.8033 v 0 c -2.32629,-5.65626 -7.6853,-9.9274 -15.30859,-9.9274 v 0 c -0.38269,0 -0.78605,0.0113 -1.18065,0.0335 v 0 c -8.3101,0.4675 -19.1219,5.8788 -25.2373,16.5868 v 0 c -6.1354,10.743 -7.5712,26.83034 -9.0118,43.08675 z"
         id="path654-2"
         style="fill:#000000;fill-opacity:1" /><path
         id="path12-7"
         d="m 980.00391,887.48828 c -2.76763,0.4624 -5.50948,1.12088 -8.24242,1.76864 -4.94962,1.27574 -9.94706,2.8764 -14.16095,5.85368 -4.50646,3.17209 -7.81399,7.89143 -9.49955,13.11899 -2.20132,6.63297 -2.23365,13.76884 -1.50563,20.65372 0.28529,0.6599 -0.49398,0.93992 -0.8285,1.38364 -4.90347,4.89735 -8.28947,11.15124 -10.2891,17.75291 -3.16114,10.00722 -4.12313,20.52017 -5.14157,30.91369 -0.1339,1.85036 -0.39962,3.7075 -0.39811,5.55827 0.22092,2.15361 2.18746,3.78549 4.27566,4.01299 3.80913,0.90325 7.58812,1.96377 11.41918,2.75265 2.68412,0.28585 5.13039,-2.31921 4.79252,-4.97269 4e-5,-6.18531 -0.0905,-12.37465 -0.006,-18.55748 0.7686,-5.86377 1.31532,-11.76382 2.36616,-17.58621 0.15265,-0.66086 0.32861,-1.31696 0.55853,-1.95553 2.72273,3.46928 6.22385,6.40809 10.36508,8.01623 4.10262,1.64036 8.57249,2.39749 12.98648,2.20056 4.33649,-0.22777 8.82629,-1.88311 11.54883,-5.40625 3.5159,-4.46772 4.31958,-10.53874 3.376,-16.02056 -1.03913,-5.9992 -4.62884,-11.59514 -9.91664,-14.69956 -5.32393,-3.19028 -11.92477,-3.68293 -17.8771,-2.23171 -0.89727,0.17851 -1.87975,0.53733 -2.69554,0.70183 -0.1581,-6.99632 2.86975,-14.23165 8.63202,-18.38058 3.61323,-2.64968 7.80784,-4.3739 11.87384,-6.10574 2.54328,-0.84267 3.86942,-4.1742 2.4414,-6.48633 -0.79546,-1.43829 -2.42926,-2.36395 -4.07421,-2.28516 z m -8.42774,47.19336 c 1.67224,0.10382 2.67484,1.64709 3.25958,3.04636 0.76021,1.65266 1.19092,3.47506 1.12323,5.29934 -2.59178,-0.0736 -5.02847,-1.28413 -7.0957,-2.77343 -1.35429,-1.07294 -2.4496,-2.44339 -3.32226,-3.92774 1.86371,-0.95427 3.90755,-1.73123 6.03515,-1.64453 z"
         style="fill:#000000;fill-opacity:1" /></g></g></svg>
